---
name: 'Build Go'

permissions:
  contents: read

on:
  workflow_call:
    inputs:
      runs-on:
        description: Additional required tags for the pipeline agents to use.
        required: true
        type: string
      working-directory:
        description: 'Directory to use for storing the artifacts and running the build'
        type: string
        required: false
        default: ./
      go-version:
        description: Go version to use for building
        required: false
        type: string
        default: '1.23'
      version:
        description: Semantic version of current build
        type: string
        required: false
        default: 0.0.1-alpha
      artifact-name:
        description: Name of the artifact to upload to the calling workflow
        type: string
        required: true
      target-os:
        description: Target operating systems for build
        type: string
        required: false
        default: '["linux", "windows", "darwin"]'
      target-arch:
        description: Target architectures for build
        type: string
        required: false
        default: '["amd64", "arm64"]'
      version-package:
        description: Go package path for version variable (e.g., main, internal/version)
        required: false
        type: string
        default: main

jobs:
  build:
    name: Build Go ${{ matrix.goos }}/${{ matrix.goarch }}
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    strategy:
      matrix:
        goos: ${{ fromJSON(inputs.target-os) }}
        goarch: ${{ fromJSON(inputs.target-arch) }}
      fail-fast: false

    steps:
      - name: Clean Agent Workspace
        uses: tiacsys/clean-after-action@v3.0.0

      - name: Checkout Repo
        uses: actions/checkout@v5.0.0

      - name: Set up Go ${{ inputs.go-version }}
        uses: actions/setup-go@v5.5.0
        with:
          go-version: ${{ inputs.go-version }}

      - name: Download dependencies
        run: go mod download
        working-directory: "${{ inputs.working-directory }}"

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          binary_name="${{ github.event.repository.name }}"
          if [ "${{ matrix.goos }}" = "windows" ]; then
            binary_name="${binary_name}.exe"
          fi
          go build -v -ldflags="-X ${{ inputs.version-package }}.version=${{ inputs.version }}" -o "${binary_name}" .
          mkdir -p dist/${{ matrix.goos }}_${{ matrix.goarch }}
          mv "${binary_name}" dist/${{ matrix.goos }}_${{ matrix.goarch }}/
        working-directory: "${{ inputs.working-directory }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4.4.0
        with:
          name: ${{ inputs.artifact-name }}-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ${{ inputs.working-directory }}/dist/${{ matrix.goos }}_${{ matrix.goarch }}/*
          retention-days: 5

  createBug:
    name: Create Bug
    needs: [build]
    if: failure()
    uses: ./.github/workflows/create-bug.yml
    with:
      runs-on: ${{ fromJSON(inputs.runs-on) }}
      title: 'Go Build Failed'
      job: 'build'
      status: 'failure'
